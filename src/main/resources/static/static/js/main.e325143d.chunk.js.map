{"version":3,"sources":["components/App.js","serviceWorker.js","components/Form.js","components/Data.js","components/Blogs.js","components/Homepage.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","component","react_default","a","createElement","id","Component","Boolean","window","location","hostname","match","Form","ReactDOM","render","components_Blogs","document","getElementById","components_Homepage","blogsPage","homepage","addEventListener","toBlogs","bind","toHomePage","action","method","className","type","name","required","size","value","Data","title","author","date","body","category","backendUrl","url","fetch","then","httpResponse","json","data","setState","Blogs","allEntries","entries","doIt","assertThisInitialized","toPosting","components_Form","components_Data","i","length","push","key","onClick","renderBlogPost","style","cursor","dataArray","writingPage","undefined","Homepage","writeAPostPage","toPosts","referrer","substring","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e325143d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {'component': props.component};\n  }\n\n  render() {\n    return (\n        <div id=\"firstDiv\">\n          {this.props.component}\n        </div>\n    )\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport '../styles/Form.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport Homepage from \"./Homepage.js\";\r\nimport Blogs from \"./Blogs.js\";\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    toBlogs() {\r\n        ReactDOM.render(<Blogs />,\r\n            document.getElementById(\"firstDiv\"));\r\n    }\r\n\r\n    toHomePage() {\r\n        ReactDOM.render(<Homepage />,\r\n            document.getElementById(\"firstDiv\"));\r\n    }\r\n\r\n    componentDidMount() {\r\n        let blogsPage = document.getElementById(\"to-blogs\");\r\n        let homepage = document.getElementById(\"to-homepage\");\r\n        blogsPage.addEventListener(\"click\", this.toBlogs.bind(this));\r\n        homepage.addEventListener(\"click\", this.toHomePage.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"formsDiv\">\r\n                <div id=\"form-div\">\r\n                    <div id=\"left-div-form\">\r\n                        <h1 id=\"heading\">Write your blog post on this page</h1>\r\n                        <form action=\"http://localhost:8080/blog/ready\" id=\"form\"\r\n                              method=\"post\">\r\n                            <div className=\"label\"> Your name: </div>\r\n                            <input type=\"text\" id=\"name-input-field\"\r\n                                   name=\"name\" required=\"true\"/><br/>\r\n                            <div className=\"label\">Blog post title: </div>\r\n                            <input type=\"text\" id=\"title-input-field\"\r\n                                   name=\"title\" required=\"true\"/>\r\n                            <div className=\"label\">Choose a category:\r\n                                <select name=\"category\" id=\"category-chooser\"\r\n                                        size=\"1\">\r\n                                    <option>Document Management</option>\r\n                                    <option>Metadata</option>\r\n                                    <option>Version Control</option>\r\n                                    <option>Other</option>\r\n                                </select>\r\n                            </div><br/><br/>\r\n                            <div className=\"label\">Write your post here:<br/></div>\r\n                            <textarea id=\"blog-post-area\"\r\n                                      name=\"blog-post\" required=\"true\"/><br/>\r\n                            <input type=\"submit\" value=\"Submit\" id=\"form-submit\"/>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"right-div-main\">\r\n                        <div id=\"to-homepage\">TO HOMEPAGE</div>\r\n                        <div id=\"to-blogs\">TO BLOGS</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport '../styles/Data.css';\r\nimport Blogs from './Blogs.js';\r\nimport Homepage from './Homepage.js';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Data extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={title: '', author: '', date: '', body: '', category: '',\r\n            'backendUrl': this.props.backendUrl};\r\n    }\r\n\r\n    toBlogs() {\r\n        ReactDOM.render(<Blogs />,\r\n            document.getElementById(\"firstDiv\"));\r\n    }\r\n\r\n    toHomePage() {\r\n        ReactDOM.render(<Homepage />,\r\n            document.getElementById(\"firstDiv\"));\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        let url = this.state.backendUrl;\r\n\r\n        let data = await fetch(url)\r\n            .then((httpResponse) => httpResponse.json())\r\n            .then((json) => {\r\n                return json;\r\n            });\r\n\r\n        await this.setState({title: data.title, author: data.author,\r\n            date: data.date, body: data.body, category: data.category});\r\n\r\n        let blogsPage = document.getElementById(\"to-blogs\");\r\n        let homepage = document.getElementById(\"to-homepage\");\r\n        blogsPage.addEventListener(\"click\", this.toBlogs.bind(this));\r\n        homepage.addEventListener(\"click\", this.toHomePage.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container1\">\r\n                <div className=\"left-div\">\r\n                    <h1 className=\"blogTitle\">{this.state.title}</h1>\r\n                    <div className=\"blog-body\">{this.state.body}</div>\r\n                </div>\r\n                <div className=\"a\">\r\n                    <div className=\"right-div\">\r\n                        <h3 className=\"metaData\">Category: {this.state.category}\r\n                            <br/>Written by: {this.state.author}\r\n                            <br/> <br/>on {this.state.date}</h3>\r\n                    </div>\r\n                    <div className=\"b\">\r\n                        <div id=\"to-homepage\">TO HOMEPAGE</div>\r\n                        <div id=\"to-blogs\">TO BLOGS</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Data;","import React, { Component } from 'react';\r\nimport '../styles/Blogs.css';\r\nimport Homepage from './Homepage.js';\r\nimport Form from './Form.js';\r\nimport Data from './Data.js';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Blogs extends Component {\r\n\r\n    allEntries = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {'data': [], 'entries': this.allEntries};\r\n        this.doIt = this.doIt.bind(this);\r\n        this.toPosting = this.toPosting.bind(this);\r\n        this.toHomePage = this.toHomePage.bind(this);\r\n    }\r\n\r\n    toPosting() {\r\n        ReactDOM.render(<Form />,\r\n            document.getElementById('firstDiv'));\r\n    }\r\n\r\n    toHomePage() {\r\n        ReactDOM.render(<Homepage />,\r\n            document.getElementById('firstDiv'));\r\n    }\r\n\r\n    renderBlogPost(backendUrl) {\r\n        ReactDOM.render(<Data backendUrl={backendUrl}/>, document.getElementById('firstDiv'));\r\n    }\r\n\r\n    doIt() {\r\n        for (let i = 0; i < this.state.data.length; i++) {\r\n            let backendUrl = this.state.data[i].url;\r\n\r\n            this.allEntries.push(<div className=\"titles\" key={'title' + i}>\r\n                <a onClick={this.renderBlogPost.bind(this, backendUrl)}\r\n                   style={{cursor: 'pointer'}}>\r\n                    {this.state.data[i].title}</a>\r\n            </div>);\r\n            this.allEntries.push(<div className=\"category\" key={'category' + i}>\r\n                Category: {this.state.data[i].category}</div>);\r\n            this.allEntries.push(<div className=\"authors\" key={'author' + i}>\r\n                By: {this.state.data[i].author}</div>);\r\n            this.allEntries.push(<div className=\"dates\" key={'date' + i}>\r\n                Date: {this.state.data[i].date}</div>);\r\n        }\r\n        this.setState({'entries': this.allEntries});\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let url = 'http://localhost:8080/blogs';\r\n\r\n        let dataArray = await fetch(url)\r\n            .then((httpResponse) => httpResponse.json())\r\n            .then((json) => {\r\n                return json;\r\n            });\r\n\r\n        this.setState({data: dataArray });\r\n\r\n        await this.doIt();\r\n\r\n        let writingPage = document.getElementById(\"to-writing-posts\");\r\n        let homepage = document.getElementById(\"to-homepage\");\r\n        writingPage.addEventListener(\"click\", this.toPosting);\r\n        homepage.addEventListener(\"click\", this.toHomePage);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.data[0] !== undefined &&\r\n            this.state.entries[0] !== undefined) {\r\n            return (\r\n                <div id=\"blogsDiv\">\r\n                    <div className=\"container0\">\r\n                        <div className=\"left-div-main\">\r\n                            <div className=\"text-body-main\">\r\n                                <h1 id =\"welcome-heading\">List of All Blog Entries</h1>\r\n                                <div>{this.state.entries}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-div-main\">\r\n                            <div id=\"to-homepage\">TO HOMEPAGE</div>\r\n                            <div id=\"to-writing-posts\">WRITE A POST</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Blogs;","import React, { Component } from 'react';\r\nimport '../styles/Homepage.css';\r\nimport Blogs from './Blogs.js';\r\nimport Form from './Form.js';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Homepage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    toBlogs() {\r\n        ReactDOM.render(<Blogs />,\r\n            document.getElementById(\"firstDiv\"));\r\n    }\r\n\r\n    toPosts() {\r\n        ReactDOM.render(<Form />,\r\n            document.getElementById(\"firstDiv\"));\r\n    }\r\n\r\n    componentDidMount() {\r\n        let blogsPage = document.getElementById(\"to-blog-posts\");\r\n        let writeAPostPage = document.getElementById(\"to-writing-posts\");\r\n        blogsPage.addEventListener(\"click\", this.toBlogs.bind(this));\r\n        writeAPostPage.addEventListener(\"click\", this.toPosts.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"homepageDiv\">\r\n                <div className=\"container0\">\r\n                    <div className=\"left-div-main\">\r\n                        <h1 id =\"welcome-heading\">Welcome to Blogging Site hosted by Olli P</h1>\r\n                        <div className=\"text-body-main\">\r\n                            You may add blog posts to this site and view\r\n                            posted blog posts by clicking on the links on the right.<br/><br/>\r\n                            This website is centered mainly around document management.\r\n                            There are currently 4 categories you can\r\n                            choose to write on.<br/><br/>\r\n                            The categories are: Document Management, Metadata,\r\n                            Version Control and Other.</div>\r\n                    </div>\r\n                    <div className=\"right-div-main\">\r\n                        <div id=\"to-blog-posts\">TO BLOG POSTS</div>\r\n                        <div id=\"to-writing-posts\">WRITE A POST</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport Homepage from './components/Homepage.js';\nimport Data from './components/Data.js';\n\nif (document.referrer.match('http://localhost:8080/blog/get/.+')) {\n    let backendUrl = \"http://localhost:8080/blogs/\" + document.referrer.substring(31);\n    ReactDOM.render(<App component={<Data backendUrl={backendUrl}/>} />,\n        document.getElementById(\"root\"));\n} else {\n    ReactDOM.render(<App component={<Homepage/>}/>, document.getElementById('root'));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}